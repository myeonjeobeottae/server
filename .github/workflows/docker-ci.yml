name: CI/CD with Node.js and Docker

on:
  push:
    branches:
      - main # 원하는 브랜치로 변경 가능

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - run: ls -al
      - uses: actions/checkout@v2
        with:
          ref: main
      - run: ls -al
      - run: cat .github/workflows/docker-ci.yml

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          token: ${{ secrets.GH_DOTCOM_TOKEN }}
          node-version: '18' # 사용할 Node.js 버전을 선택합니다

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache

      - name: Build Node.js app
        run: yarn run build

      - name: Build Docker image
        run: docker buildx build . --no-cache

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: yisuho/mjat-server:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: SSH connect to production server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd server
            docker-compose down 
            docker-compose pull yisuho/mjat-server:latest
            docker-compose up --force-recreate --build -d
